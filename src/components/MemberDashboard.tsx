import React, { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'\nimport { \n  Calendar, \n  Trophy, \n  Users, \n  Clock, \n  MapPin, \n  Star, \n  TrendingUp, \n  Activity,\n  Target,\n  Award,\n  Zap,\n  Heart\n} from 'lucide-react'\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card'\nimport { Badge } from './ui/badge'\nimport { Button } from './ui/button'\nimport { Progress } from './ui/progress'\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs'\n\ninterface MemberStats {\n  matchesAttended: number\n  trainingsSessions: number\n  volunteerHours: number\n  socialEngagement: number\n  membershipStreak: number\n  favoritePlayer: string\n  preferredPosition: string\n  joinDate: Date\n}\n\ninterface PersonalizedContent {\n  nextMatch: {\n    opponent: string\n    date: Date\n    venue: string\n    importance: 'high' | 'medium' | 'low'\n    prediction: string\n  }\n  recommendations: {\n    id: string\n    type: 'article' | 'video' | 'event'\n    title: string\n    reason: string\n    image: string\n  }[]\n  achievements: {\n    id: string\n    title: string\n    description: string\n    icon: string\n    unlockedAt: Date\n    rarity: 'common' | 'rare' | 'epic' | 'legendary'\n  }[]\n}\n\nexport const MemberDashboard: React.FC = () => {\n  const [memberStats, setMemberStats] = useState<MemberStats>({\n    matchesAttended: 12,\n    trainingsSessions: 8,\n    volunteerHours: 24,\n    socialEngagement: 85,\n    membershipStreak: 156,\n    favoritePlayer: 'Marcus Thompson',\n    preferredPosition: 'Midfielder',\n    joinDate: new Date('2024-01-15')\n  })\n\n  const [personalizedContent, setPersonalizedContent] = useState<PersonalizedContent>({\n    nextMatch: {\n      opponent: 'Riverside FC',\n      date: new Date('2024-07-20T15:00:00'),\n      venue: 'Penhill Stadium',\n      importance: 'high',\n      prediction: '78% win probability based on recent form'\n    },\n    recommendations: [\n      {\n        id: '1',\n        type: 'article',\n        title: 'Marcus Thompson: The Making of a Goal Machine',\n        reason: 'Based on your favorite player',\n        image: 'https://images.unsplash.com/photo-1594736797933-d0401ba2fe65?w=200&h=120&fit=crop'\n      },\n      {\n        id: '2',\n        type: 'video',\n        title: 'Midfield Masterclass: Tactical Analysis',\n        reason: 'Matches your preferred position',\n        image: 'https://images.unsplash.com/photo-1574629810360-7efbbe195018?w=200&h=120&fit=crop'\n      },\n      {\n        id: '3',\n        type: 'event',\n        title: 'Volunteer Appreciation Dinner',\n        reason: 'You\\'ve volunteered 24 hours this season',\n        image: 'https://images.unsplash.com/photo-1511795409834-ef04bbd61622?w=200&h=120&fit=crop'\n      }\n    ],\n    achievements: [\n      {\n        id: '1',\n        title: 'Loyal Supporter',\n        description: 'Attended 10+ matches this season',\n        icon: 'üèÜ',\n        unlockedAt: new Date('2024-06-15'),\n        rarity: 'rare'\n      },\n      {\n        id: '2',\n        title: 'Community Champion',\n        description: 'Volunteered 20+ hours',\n        icon: 'üåü',\n        unlockedAt: new Date('2024-07-01'),\n        rarity: 'epic'\n      },\n      {\n        id: '3',\n        title: 'Social Butterfly',\n        description: 'High social engagement score',\n        icon: 'ü¶ã',\n        unlockedAt: new Date('2024-07-10'),\n        rarity: 'common'\n      }\n    ]\n  })\n\n  const [activeTab, setActiveTab] = useState('overview')\n  const [timeUntilMatch, setTimeUntilMatch] = useState('')\n\n  useEffect(() => {\n    const updateCountdown = () => {\n      const now = new Date()\n      const matchTime = personalizedContent.nextMatch.date\n      const diff = matchTime.getTime() - now.getTime()\n      \n      if (diff > 0) {\n        const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n        \n        if (days > 0) {\n          setTimeUntilMatch(`${days}d ${hours}h ${minutes}m`)\n        } else {\n          setTimeUntilMatch(`${hours}h ${minutes}m`)\n        }\n      } else {\n        setTimeUntilMatch('Match in progress')\n      }\n    }\n\n    updateCountdown()\n    const interval = setInterval(updateCountdown, 60000)\n    return () => clearInterval(interval)\n  }, [personalizedContent.nextMatch.date])\n\n  const getRarityColor = (rarity: string) => {\n    switch (rarity) {\n      case 'legendary': return 'bg-gradient-to-r from-yellow-400 to-orange-500 text-white'\n      case 'epic': return 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'\n      case 'rare': return 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white'\n      default: return 'bg-gradient-to-r from-gray-400 to-gray-500 text-white'\n    }\n  }\n\n  const getEngagementLevel = (score: number) => {\n    if (score >= 90) return { level: 'Superfan', color: 'text-purple-600', bg: 'bg-purple-100' }\n    if (score >= 70) return { level: 'Active', color: 'text-blue-600', bg: 'bg-blue-100' }\n    if (score >= 50) return { level: 'Regular', color: 'text-green-600', bg: 'bg-green-100' }\n    return { level: 'Casual', color: 'text-gray-600', bg: 'bg-gray-100' }\n  }\n\n  const engagement = getEngagementLevel(memberStats.socialEngagement)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Personalized Hero */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"relative overflow-hidden rounded-xl bg-gradient-to-r from-primary to-accent p-6 text-white\"\n      >\n        <div className=\"relative z-10\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h2 className=\"text-2xl font-bold mb-1\">Welcome back, Member!</h2>\n              <p className=\"opacity-90\">Your next match is in {timeUntilMatch}</p>\n            </div>\n            <div className=\"text-right\">\n              <Badge className={`${engagement.bg} ${engagement.color} border-0`}>\n                {engagement.level} Member\n              </Badge>\n              <p className=\"text-sm opacity-90 mt-1\">{memberStats.membershipStreak} day streak</p>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{memberStats.matchesAttended}</div>\n              <div className=\"text-sm opacity-90\">Matches</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{memberStats.trainingsSessions}</div>\n              <div className=\"text-sm opacity-90\">Training</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{memberStats.volunteerHours}</div>\n              <div className=\"text-sm opacity-90\">Vol. Hours</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{memberStats.socialEngagement}%</div>\n              <div className=\"text-sm opacity-90\">Engagement</div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Background Pattern */}\n        <div className=\"absolute inset-0 opacity-10\">\n          <div className=\"absolute top-4 right-4 text-6xl\">‚öΩ</div>\n          <div className=\"absolute bottom-4 left-4 text-4xl\">üèÜ</div>\n          <div className=\"absolute top-1/2 left-1/3 text-3xl\">‚≠ê</div>\n        </div>\n      </motion.div>\n\n      {/* Dashboard Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"matches\">Matches</TabsTrigger>\n          <TabsTrigger value=\"achievements\">Achievements</TabsTrigger>\n          <TabsTrigger value=\"recommendations\">For You</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          {/* Next Match Card */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Trophy className=\"w-5 h-5\" />\n                Next Match\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-xl font-bold\">vs {personalizedContent.nextMatch.opponent}</h3>\n                  <div className=\"flex items-center gap-4 text-sm text-muted-foreground mt-1\">\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"w-4 h-4\" />\n                      {personalizedContent.nextMatch.date.toLocaleDateString()}\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Clock className=\"w-4 h-4\" />\n                      {personalizedContent.nextMatch.date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <MapPin className=\"w-4 h-4\" />\n                      {personalizedContent.nextMatch.venue}\n                    </div>\n                  </div>\n                </div>\n                <Badge \n                  variant={personalizedContent.nextMatch.importance === 'high' ? 'destructive' : 'secondary'}\n                  className=\"capitalize\"\n                >\n                  {personalizedContent.nextMatch.importance} Priority\n                </Badge>\n              </div>\n              \n              <div className=\"bg-muted/50 rounded-lg p-3 mb-4\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  <TrendingUp className=\"w-4 h-4 text-green-600\" />\n                  <span className=\"text-sm font-medium\">Match Prediction</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">{personalizedContent.nextMatch.prediction}</p>\n              </div>\n              \n              <div className=\"flex gap-2\">\n                <Button className=\"flex-1\">Get Tickets</Button>\n                <Button variant=\"outline\" className=\"flex-1\">Add to Calendar</Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Quick Stats */}\n          <div className=\"grid md:grid-cols-3 gap-4\">\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Favorite Player</p>\n                    <p className=\"font-semibold\">{memberStats.favoritePlayer}</p>\n                  </div>\n                  <Star className=\"w-8 h-8 text-yellow-500\" />\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Preferred Position</p>\n                    <p className=\"font-semibold\">{memberStats.preferredPosition}</p>\n                  </div>\n                  <Target className=\"w-8 h-8 text-blue-500\" />\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Member Since</p>\n                    <p className=\"font-semibold\">{memberStats.joinDate.toLocaleDateString()}</p>\n                  </div>\n                  <Heart className=\"w-8 h-8 text-red-500\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"matches\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Match Attendance</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span>Season Progress</span>\n                    <span>{memberStats.matchesAttended}/20 matches</span>\n                  </div>\n                  <Progress value={(memberStats.matchesAttended / 20) * 100} className=\"h-2\" />\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4 text-center\">\n                  <div className=\"p-3 bg-muted/50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-green-600\">{Math.round((memberStats.matchesAttended / 20) * 100)}%</div>\n                    <div className=\"text-sm text-muted-foreground\">Attendance Rate</div>\n                  </div>\n                  <div className=\"p-3 bg-muted/50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{20 - memberStats.matchesAttended}</div>\n                    <div className=\"text-sm text-muted-foreground\">Matches Left</div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"achievements\" className=\"space-y-4\">\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            {personalizedContent.achievements.map((achievement, index) => (\n              <motion.div\n                key={achievement.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-start gap-3\">\n                      <div className={`p-2 rounded-lg ${getRarityColor(achievement.rarity)}`}>\n                        <span className=\"text-lg\">{achievement.icon}</span>\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <h3 className=\"font-semibold\">{achievement.title}</h3>\n                          <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                            {achievement.rarity}\n                          </Badge>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground mb-2\">{achievement.description}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Unlocked {achievement.unlockedAt.toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"recommendations\" className=\"space-y-4\">\n          <div className=\"space-y-4\">\n            {personalizedContent.recommendations.map((rec, index) => (\n              <motion.div\n                key={rec.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center gap-4\">\n                      <img \n                        src={rec.image} \n                        alt={rec.title}\n                        className=\"w-16 h-16 rounded-lg object-cover\"\n                      />\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <h3 className=\"font-semibold\">{rec.title}</h3>\n                          <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                            {rec.type}\n                          </Badge>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground mb-2\">{rec.reason}</p>\n                        <Button size=\"sm\" variant=\"outline\">\n                          {rec.type === 'article' ? 'Read Article' : \n                           rec.type === 'video' ? 'Watch Video' : 'View Event'}\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}